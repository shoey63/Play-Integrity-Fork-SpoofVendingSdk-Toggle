name: Android CI

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Also create a GitHub Release?"
        required: false
        default: "false"
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-26

    permissions:
      contents: write  # needed for creating releases

    steps:
      - name: Check out
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'
          fetch-depth: 0

      # Build the flashable zip manually
      - name: Prepare flashable module zip
        run: |
          mkdir out
          zipname="spoofVendingSdkToggle_${{ github.run_number }}.zip"
          echo "Creating $zipname ..."
          zip -r9 "out/$zipname" . \
            -x "*.git*" \
            -x "README.md" \
            -x ".github/*"
          echo "ZIP_NAME=$zipname" >> $GITHUB_ENV

      # Upload the *actual flashable zip* as the artifact (no extra wrapping)
      - name: Upload flashable zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: spoofVendingSdkToggle_#${{ github.run_number }}
          path: out/
          compression-level: 0  # don't re-zip it!

      # Optional: collect commit info for release notes
      - name: Get latest commit message
        id: commit
        run: |
          echo "MSG=$(git log -1 --pretty=%B | head -n 1)" >> $GITHUB_ENV
          echo "DATE=$(date -u '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_ENV

      # Optional release step (only if manually triggered with release=true)
      - name: Optionally create GitHub Release
        if: ${{ github.event.inputs.release == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: CI_${{ github.run_number }}
          name: "spoofVendingSdkToggle CI #${{ github.run_number }} (${{ env.DATE }})"
          body: |
            **Automated CI build**
            - Build #: ${{ github.run_number }}
            - Date: ${{ env.DATE }}
            - Commit: ${{ github.sha }}
            - Message: ${{ env.MSG }}
          files: out/${{ env.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
